#!/usr/bin/python
from random import *

hostname = 'localhost'
username = 'W01230747'
password = 'Mikaellecs!'
database = 'W01230747'

def doQuery( conn ) :
	cur = conn.cursor()

#	temp = ""	
#	temp2 = ""
#	for x in range(1, 144):
	#	if x <= 12 or x >= 132:
	#		tempNum=0
	#	else:
		#	tempNum=randint(0,1)
		#temp = "{}{}".format(temp, tempNum) 	
#	print(temp)
#	for x in range(1, 144):
#		tempNum=randint(0,1)
#		temp2 = "{}{}".format(temp2, tempNum)

#tub	 #cur.execute( "UPDATE Active SET Alive='0000000100010100010000000';")

#boat	 #cur.execute( "UPDATE Active SET Alive='0000001100010100010000000';")	

#blinker #cur.execute( "UPDATE Active SET Alive='0000000000011100000000000';") 

#toad	 #cur.execute( "UPDATE Active SET Alive='000000000000001110011100000000000000';")

#	cur.execute( "UPDATE Active SET Alive='000000000000000000000000000001100000000010010000000100001000001000000100001000000100000100001000000010010000000001100000000000000000000000000000';")         

	#cur.execute( "UPDATE Active SET Alive='000000011000010000000010000110000000';")

	cur.execute( "SELECT ID, Alive FROM Frozen;" )
		
	frozenBoard = cur.fetchall()
	
#	cur.execute( "UPDATE Active SET Alive='{}';".format(temp2))	

	#cur.execute( "Update Active SET Alive = '0000000100001000010000000';" )

	cur.execute( "SELECT activeID, Alive FROM Active;" )

	activeBoard = cur.fetchall()	

	for row in frozenBoard: 
#		print row[1]
		frozenRow = row[1]
	for row in activeBoard:
#		print row[1]
		activeRow = row[1]

	gridSize=len(activeRow)	
	print("Grid size is: {}").format(gridSize)
	y=gridSize**(.5)
	y=int(y)
	print("Row length is: {}").format(y)

	newGrid=""

	for x in range(0,gridSize):
		currentCell = activeRow[x]
		aliveCellCount = 0		
		
		if x <= y:
			newGrid+=str(0)
		elif x > y and x < (gridSize-y-1):
			if(activeRow[x-(y+1)] == "1"):
				aliveCellCount += 1
			if(activeRow[x-y] == "1"):
				aliveCellCount += 1
			if(activeRow[x-(y-1)] == "1"):
				aliveCellCount += 1
			if(activeRow[x-1] == "1"):
				aliveCellCount += 1
			if(activeRow[x+1] == "1"):
				aliveCellCount += 1
			if(activeRow[x+(y-1)] == "1"):
				aliveCellCount += 1
			if(activeRow[x+y] == "1"):
				aliveCellCount += 1
			if(activeRow[x+(y+1)] == "1"):
				aliveCellCount += 1
			if(activeRow[x] == "1" and aliveCellCount < 2):
				newGrid+=str(0)
				#print("x is {} and aliveCellCount is {} Grid is: {}").format(x, aliveCellCount, newGrid)
			elif(activeRow[x] == "1" and (aliveCellCount == 2 or aliveCellCount == 3)):
				newGrid+=str(1)
				#print("x is {} and aliveCellCount is {} Grid is: {}").format(x, aliveCellCount, newGrid)
			elif(activeRow[x] == "1" and aliveCellCount > 3):
				newGrid+=str(0)
				#print("x is {} and aliveCellCount is {} Grid is: {}").format(x, aliveCellCount, newGrid)
			elif(activeRow[x] == "0" and aliveCellCount == 3):
				newGrid+=str(1)
				#print("x is {} and aliveCellCount is {} Grid is: {}").format(x, aliveCellCount, newGrid)
			else:
				newGrid+=str(0)
				
		elif x >= (gridSize-y-1):
			newGrid+=str(0)

	z=0
	rowSize=y	
	for x in range(0,y):
		print(newGrid[z:y])
		z+=rowSize
		y+=rowSize

	#print(newGrid[0:5])
	#print(newGrid[5:10])
	#print(newGrid[10:15])
	#print(newGrid[15:20])
	#print(newGrid[20:25])
	print
		
	cur.execute("UPDATE Active SET Alive = '{}';".format(newGrid))
	conn.commit()
#	for x in range(0,25):
#		currentCell = activeRow[x]
		
#		if x < 5:	
#			print("top edge cell = {}").format(currentCell)
#		elif x%5 == 0:
#			print("left edge cell = {}").format(currentCell)
#		elif (x+1)%5 == 0:
#			print("right edge cell = {}").format(currentCell)
#		elif x > 20:
#			print("bottom edge cell = {}").format(currentCell)
#		else:
#			print("center cell = {}").format(currentCell)
			
print "Using mysql.connector..."
import time
import mysql.connector
myConnection = mysql.connector.connect( host=hostname, user=username, passwd=password, db=database )

while True:
	doQuery( myConnection )
	time.sleep(1)
myConnection.close()

 
